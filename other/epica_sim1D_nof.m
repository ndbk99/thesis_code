function [sim_x, sim_n] = epica_sim1D_nof(obj,Y,M,m,nf)
%
% FUNCTION: epica_sim(obj,Y,M,m)
%
% PURPOSE: use simple Euler's method to simulate data based on 1D
% stochastic ODE model
%
% INPUT: 
% - obj: DataSet object for the data you want to use
% - Y: number of "years" (sectors) to divide data into
% - M: number of "months" (subsections) to divide "years" into
% - m: offset in "years" for autocorrelation of f
%
% OUTPUT: 
% - sim_x: x-values for the resulting simulated data
% - sim_y: y-values generated by the simulation
%
%%

    if nargin == 4
        nf = 1;
    end

    % get model parameters for simulation
    [a,N,f,~] = findanf_epica(obj,Y,M,m);
    
    % set up time interval and white noise for simulation loop
    delt = range(obj.X) / (Y*M);
    wx = randn(Y*M);

    
    % set initial value of simulation
    i = 1;
    sim_n(1) = obj.Y(1) - obj.data_mean;
    
    % run Euler's Method simulation
    for j=1:Y
        for k=1:M
            sim_n(i+1) = sim_n(i) + a(k)*sim_n(i)*delt + N(k)*nf*sqrt(delt)*wx(i);
            i = i + 1;
        end
    end
    
    % create array of x-values to go with simulated y-values
    sim_x = ( linspace(1,length(sim_n)+1,length(sim_n)) - length(sim_n) ) * range(obj.X) / length(sim_n);
    

end

